/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Id } from './Id';
import {
    IdFromJSON,
    IdFromJSONTyped,
    IdToJSON,
} from './Id';
import type { ProcedureName } from './ProcedureName';
import {
    ProcedureNameFromJSON,
    ProcedureNameFromJSONTyped,
    ProcedureNameToJSON,
} from './ProcedureName';
import type { Step } from './Step';
import {
    StepFromJSON,
    StepFromJSONTyped,
    StepToJSON,
} from './Step';
import type { Summary } from './Summary';
import {
    SummaryFromJSON,
    SummaryFromJSONTyped,
    SummaryToJSON,
} from './Summary';

/**
 * Pydantic model for a case record.
 * @export
 * @interface Case
 */
export interface Case {
    /**
     * 
     * @type {Id}
     * @memberof Case
     */
    id?: Id;
    /**
     * 
     * @type {string}
     * @memberof Case
     */
    caseId: string;
    /**
     * 
     * @type {string}
     * @memberof Case
     */
    status?: string;
    /**
     * 
     * @type {ProcedureName}
     * @memberof Case
     */
    procedureName?: ProcedureName;
    /**
     * 
     * @type {Summary}
     * @memberof Case
     */
    summary?: Summary;
    /**
     * 
     * @type {boolean}
     * @memberof Case
     */
    isMet?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Case
     */
    isComplete?: boolean;
    /**
     * 
     * @type {Array<Step>}
     * @memberof Case
     */
    steps?: Array<Step>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Case
     */
    cptCodes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Case
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Case
     */
    updatedAt?: string;
    /**
     * 
     * @type {number}
     * @memberof Case
     */
    timeSinceUpload?: number;
}

/**
 * Check if a given object implements the Case interface.
 */
export function instanceOfCase(value: object): boolean {
    if (!('caseId' in value)) return false;
    return true;
}

export function CaseFromJSON(json: any): Case {
    return CaseFromJSONTyped(json, false);
}

export function CaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Case {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : IdFromJSON(json['id']),
        'caseId': json['case_id'],
        'status': json['status'] == null ? undefined : json['status'],
        'procedureName': json['procedure_name'] == null ? undefined : ProcedureNameFromJSON(json['procedure_name']),
        'summary': json['summary'] == null ? undefined : SummaryFromJSON(json['summary']),
        'isMet': json['is_met'] == null ? undefined : json['is_met'],
        'isComplete': json['is_complete'] == null ? undefined : json['is_complete'],
        'steps': json['steps'] == null ? undefined : ((json['steps'] as Array<any>).map(StepFromJSON)),
        'cptCodes': json['cpt_codes'] == null ? undefined : json['cpt_codes'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
        'timeSinceUpload': json['time_since_upload'] == null ? undefined : json['time_since_upload'],
    };
}

export function CaseToJSON(value?: Case | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': IdToJSON(value['id']),
        'case_id': value['caseId'],
        'status': value['status'],
        'procedure_name': ProcedureNameToJSON(value['procedureName']),
        'summary': SummaryToJSON(value['summary']),
        'is_met': value['isMet'],
        'is_complete': value['isComplete'],
        'steps': value['steps'] == null ? undefined : ((value['steps'] as Array<any>).map(StepToJSON)),
        'cpt_codes': value['cptCodes'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
        'time_since_upload': value['timeSinceUpload'],
    };
}

